@charset "UTF-8";*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth}body{font-family:Nunito,sans-serif;font-weight:lighter;font-size:1.6rem;letter-spacing:1px}.home{position:relative}.burger-btn{display:block;position:fixed;top:10px;right:10px;padding:1em;background:none;border:1px solid transparent;cursor:pointer;z-index:1000}.burger-btn:focus{outline:none;border:1px solid hsla(0,0%,100%,.5);border-radius:8px}.burger-btn__box{position:relative;width:40px;height:30px;transition:background-color 1s}.burger-btn .black-bars-color .bar__one,.burger-btn .black-bars-color .bar__three,.burger-btn .black-bars-color .bar__two{background-color:#000}.bar__one,.bar__three,.bar__two{position:absolute;height:1px;width:100%;background-color:#fff;transition:width .3s}.bar__one{top:0;left:0;transition:transform 1s,opacity 1s}.bar__two{top:50%;left:0;transform:translateY(-50%);transition:transform 1s}.bar__three{bottom:0;left:0;transition:transform 1s,bottom 1s}.burger-active .bar__one{transform:translateY(50px);opacity:0}.burger-active .bar__two{transform:rotate(45deg);transform-origin:center}.burger-active .bar__three{transform:rotate(-45deg);transform-origin:center;bottom:50%;transform:translateY(-50%) rotate(-45deg)}.header{position:relative;z-index:100;width:100%;height:100vh;background-color:#000;overflow:hidden}.header__mobile{display:block}.header__desktop{display:none}.header__hero{background-image:url(../../../dist/img/szkolenia2.jpg);background-position:50%;background-repeat:no-repeat;background-size:cover;position:absolute;top:0;left:0;width:100%;height:100%;opacity:.3;z-index:-1}.header__title{opacity:0;text-align:center;font-family:Boska,serif;font-weight:lighter;text-transform:uppercase;letter-spacing:2px;font-size:1.7rem;color:#fff;margin-top:21em;padding:.5em;animation:b 2s 1s ease-in-out forwards}.header__span{opacity:0;animation:b 2s 2.5s ease-in-out forwards}.header__logo{opacity:0;position:absolute;top:20px;left:10px;background-image:url(../../../dist/img/Gabriela_Szymanska_Logo_Transparent.png);background-position:50%;background-repeat:no-repeat;background-size:cover;height:70px;width:110px;animation:a 3s ease-in-out forwards}.header__white{animation:b 2s 1s ease-in-out forwards}.header__white--second{animation:b 2s 2.5s ease-in-out forwards}@keyframes a{0%{opacity:0}to{opacity:1}}@keyframes b{0%{opacity:0;transform:translateY(100px)}to{opacity:1;transform:translateY(0)}}.navbar__desktop{display:none}.navbar__mobile{position:relative;z-index:999;display:block;opacity:0;transition:opacity 1s ease-in-out;position:fixed;background-color:#fff;top:0;left:0;width:100%;height:90vh;display:flex;overflow:hidden}.navbar__main,.navbar__mobile{justify-content:center;align-items:center}.navbar__main{display:flex;height:100%}.navbar__list{list-style:none;display:flex;justify-content:space-evenly;align-items:center;flex-direction:column;height:80vh}.navbar__item--link{font-size:1.6rem;display:inline-block;text-align:center;width:100%;padding:.5em 1em}.navbar__item--link,.navbar__shop--icon{color:#000;font-family:Boska,serif;font-weight:400;text-transform:uppercase;text-decoration:none;cursor:pointer}.navbar__shop--icon{position:absolute;bottom:.5em;left:.5em;font-size:1.2rem;padding:.5em}.navbar__socials{position:absolute;bottom:.5em;right:.5em;display:flex;justify-content:space-evenly;align-items:center;width:20%}.navbar__facebook,.navbar__instagram{font-size:1.5rem;text-decoration:none;color:#000;cursor:pointer;text-transform:uppercase}.navbarActive{opacity:1}@media (min-width:430px){.header__title{margin-top:20em;font-size:1.9rem}}@media (min-width:576px){.header__title{font-size:2rem;margin-top:19em}}@media (min-width:670px){.header__title{font-size:2.1rem}}@media (min-width:768px){.header__title{font-size:2.3rem;margin-top:17em}}@media (min-width:992px){.hidden{position:absolute;opacity:0;top:0;left:0}.google{justify-content:center;width:100%}.google,.title{display:flex;align-items:center;height:100%}.title{width:50%;justify-content:flex-end}.burger-btn{display:none}.header{background-color:#fff;display:flex;justify-content:center;align-items:center}.header__mobile{display:none}.header__desktop{display:block}.header__hero{position:relative;display:flex;justify-content:flex-start;align-items:center;background-repeat:no-repeat;background-size:cover;top:0;right:0;width:50%;height:100%;opacity:1;z-index:-1}.header__title{text-align:right;margin-top:0;font-weight:400;font-size:4.5rem;color:#000;padding:0}.header__logo{background-image:url(../../../dist/img/Gabriela_Szyma≈Ñska_LOGO_page-0001.jpg);height:7em;width:11em;top:20px;left:20px}.header__white{opacity:0;text-align:left;font-family:Boska,serif;font-weight:400;text-transform:uppercase;font-size:4.5rem;color:#fff}.navbar__mobile{display:none}.navbar__desktop{position:static;display:block;font-family:Boska,serif;font-weight:400;display:flex;justify-content:space-between;align-items:center;padding:.5em;box-shadow:0 5px 10px #edede9}.navbar__main{display:block;width:60%}.navbar__list{display:flex;list-style:none;justify-content:center;align-items:center;flex-direction:row;height:100%}.navbar__item{flex:1;text-align:center;position:relative;text-transform:uppercase;font-size:1rem;border-right:1px solid #000}.navbar__item--link{font-size:1rem;height:100%;transition:transform 1s}.navbar__item--link:hover{transform:scale(1.1)}.navbar__extra{display:flex;justify-content:space-evenly;align-items:center;width:30%}.navbar__shop{width:50%;border-right:1px solid #000}.navbar__shop--icon{position:static;display:inline-block;text-align:center;font-size:1rem;width:100%;transition:transform 1s}.navbar__shop--icon:hover{transform:scale(1.1)}.navbar__facebook,.navbar__instagram{transition:transform 1s}.navbar__facebook:hover,.navbar__instagram:hover{transform:scale(1.1)}.navbar__socials{position:static;font-size:2rem;width:50%}}@media (min-width:1200px){.header__title,.header__white{font-size:5rem}.navbar__item,.navbar__shop--icon{font-size:1.2rem}}@media (min-width:1800px){.header__title,.header__white{font-size:7rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
